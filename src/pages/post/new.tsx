import { trpc } from "@/utils/trpc";
import { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { SubmitHandler, useForm } from "react-hook-form";

type FormValues = {
  title: string;
  problem: string;
};

const NewPost: NextPage = () => {
  const router = useRouter();
  const { register, handleSubmit } = useForm<FormValues>();
  const mutation = trpc.useMutation(["post.new"]);

  const onSubmit: SubmitHandler<FormValues> = data => {
    if (mutation.isLoading) return;
    mutation.mutate({ ...data }, { onSuccess: () => router.replace("/") });
  };
  return (
    <>
      <Head>
        <title>Peer Support</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='layout mt-12'>
        <h1 className='text-2xl'>Peer Support</h1>
        <form className='space-y-6' onSubmit={handleSubmit(onSubmit)}>
          <div className='flex flex-col gap-2'>
            <label htmlFor='title'>Title</label>
            <input type='text' id='title' {...register("title", { required: true })} />
          </div>
          <div className='flex flex-col gap-2'>
            <label htmlFor='problem'>What do you want to tell the world?</label>
            <textarea
              id='problem'
              className='resize-y'
              {...register("problem", { required: true })}
            />
          </div>

          <button className='bg-red-700 text-white p-1 px-4 rounded-md'>
            {mutation.isLoading ? "Posting..." : "Post"}
          </button>
        </form>
      </main>
    </>
  );
};

export default NewPost;
